{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","id","ref","node","Todo","completed","textDecoration","TodoList","todos","toggleTodo","map","todo","getVisibleTodos","t","Error","App","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2d835a4.chunk.js","sourcesContent":["let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n    <button\n       onClick={onClick}\n       disabled={active}\n       style={{\n           marginLeft: '4px',\n       }}\n    >\n      {children}\n    </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n      All\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Active\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completed\n    </FilterLink>\n  </div>\n)\n\nexport default Footer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault()\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(addTodo(input.value))\n        input.value = ''\n      }}>\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul>\n    {todos.map(todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => toggleTodo(todo.id)}\n      />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst App = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default App\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      )\n    default:\n      return state\n  }\n}\n\nexport default todos\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}